version: '3.8'

services:
  vokse:
    image: alberth121484/vokse:1.0.2
    container_name: vokse
    restart: unless-stopped
    command: >
      gunicorn app:app
        --bind 0.0.0.0:3000
        --worker-class uvicorn.workers.UvicornWorker
    environment:
      # Slack Configuration
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
      - SLACK_SIGNING_SECRET=${SLACK_SIGNING_SECRET}
      - SLACK_APP_TOKEN=${SLACK_APP_TOKEN}
      
      # OpenAI Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - MAX_TOKENS=${MAX_TOKENS:-4000}
      - TEMPERATURE=${TEMPERATURE:-0.3}
      
      # BigQuery Configuration
      - GOOGLE_APPLICATION_CREDENTIALS_JSON=${GOOGLE_APPLICATION_CREDENTIALS_JSON}
      - BIGQUERY_PROJECT_ID=${BIGQUERY_PROJECT_ID}
      - BIGQUERY_DATASET=${BIGQUERY_DATASET}
      - BIGQUERY_LOCATION=${BIGQUERY_LOCATION}
      
      # Application Configuration
      - PORT=3000
      - TZ=America/Mexico_City
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - PYTHONUNBUFFERED=1
    
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "1"
          memory: 512M
      labels:
        - traefik.enable=true
        - traefik.http.routers.vokse.rule=Host(`vokse.tiendasnetows.com`)
        - traefik.http.routers.vokse.entrypoints=websecure
        - traefik.http.routers.vokse.priority=1
        - traefik.http.routers.vokse.tls.certresolver=letsencryptresolver
        - traefik.http.routers.vokse.service=vokse
        - traefik.http.services.vokse.loadbalancer.server.port=3000
        - traefik.http.services.vokse.loadbalancer.passHostHeader=1

networks:
  tiendasneto:
    external: true
    name: tiendasneto
